{"status":"unsafe","types":{"37":{"43":{"ann":"x1:Data.Text.Internal.Text -> x2:Data.Text.Internal.Text -> {v : GHC.Types.Bool | v <=> x1 == x2}","ident":"_","row":37,"col":43},"1":{"ann":"Main.Room -> GHC.Types.Bool","ident":"Main.isValid","row":37,"col":1},"34":{"ann":"Data.Text.Internal.Text","ident":"ds_d4aZ","row":37,"col":34},"46":{"ann":"(Data.Map.Internal.Map GHC.Types.Char GHC.Types.Double) -> Data.Text.Internal.Text","ident":"_","row":37,"col":46},"58":{"ann":"Data.Text.Internal.Text -> (Data.Map.Internal.Map GHC.Types.Char GHC.Types.Double)","ident":"_","row":37,"col":58}},"48":{"31":{"ann":"Data.Text.Internal.Text -> [GHC.Types.Char]","ident":"lq_anf$##7205759403792809855","row":48,"col":31},"22":{"ann":"Data.Text.Internal.Text -> Data.Text.Internal.Text","ident":"lq_anf$##7205759403792809856","row":48,"col":22},"1":{"ann":"(GHC.Types.IO ())","ident":":Main.main","row":48,"col":1},"8":{"ann":"{v : (Data.Text.Internal.Text -> Data.Text.Internal.Text) -> (GHC.Types.IO ()) | v == Data.Text.IO.interact}","ident":"_","row":48,"col":8},"38":{"ann":"Data.Text.Internal.Text -> [Main.Room]","ident":"lq_anf$##7205759403792809854","row":48,"col":38}},"25":{"20":{"ann":"{v : Data.Text.Internal.Text -> Data.Text.Internal.Text -> [Data.Text.Internal.Text] | v == Data.Text.splitOn}","ident":"_","row":25,"col":20},"11":{"ann":"[Data.Text.Internal.Text]","ident":"chunks","row":25,"col":11}},"43":{"1":{"ann":"[Main.Room] -> [Main.Room]","ident":"Main.solve2","row":43,"col":1},"26":{"ann":"x1:[Main.Room] -> {v : [Main.Room] | len v <= len x1}","ident":"lq_anf$##7205759403792809852","row":43,"col":26},"10":{"ann":"x1:[Main.Room] -> {v : [Main.Room] | len v == len x1}","ident":"lq_anf$##7205759403792809851","row":43,"col":10}},"31":{"67":{"ann":"x1:a -> x2:a -> {VV : a | VV == x1 + x2}","ident":"_","row":31,"col":67},"58":{"ann":"x1:a -> {v : (GHC.Base.Maybe a) | fromJust v == x1\n                                  && (isJust v <=> true)}","ident":"lq_anf$##7205759403792809797","row":31,"col":58},"65":{"ann":"a","ident":"lq_anf$##7205759403792809800","row":31,"col":65}},"22":{"19":{"ann":"x1:[Data.Text.Internal.Text] -> {v : [Main.Room] | len v == len x1}","ident":"lq_anf$##7205759403792809792","row":22,"col":19},"1":{"ann":"Data.Text.Internal.Text -> [Main.Room]","ident":"Main.readRooms","row":22,"col":1},"11":{"ann":"Data.Text.Internal.Text","ident":"input","row":22,"col":11},"32":{"ann":"{v : Data.Text.Internal.Text -> [Data.Text.Internal.Text] | v == Data.Text.lines}","ident":"_","row":22,"col":32}},"19":{"14":{"ann":"(GHC.Show.Show Main.Room)","ident":"Main.$fShowRoom","row":19,"col":14}},"29":{"31":{"ann":"GHC.Types.Char","ident":"c","row":29,"col":31},"36":{"ann":"((GHC.Base.Maybe a) -> (GHC.Base.Maybe a)) -> GHC.Types.Char -> (Data.Map.Internal.Map GHC.Types.Char a) -> (Data.Map.Internal.Map GHC.Types.Char a)","ident":"_","row":29,"col":36},"29":{"ann":"(Data.Map.Internal.Map GHC.Types.Char a)","ident":"m","row":29,"col":29},"1":{"ann":"(GHC.Num.Num a) =>\nData.Text.Internal.Text -> (Data.Map.Internal.Map GHC.Types.Char a)","ident":"Main.mkCounter","row":29,"col":1},"46":{"ann":"(GHC.Base.Maybe a)","ident":"r","row":29,"col":46},"11":{"ann":"Data.Text.Internal.Text","ident":"name","row":29,"col":11}},"30":{"59":{"ann":"a","ident":"lq_anf$##7205759403792809796","row":30,"col":59}},"45":{"48":{"ann":"{v : (GHC.Types.Char -> GHC.Types.Char) -> Data.Text.Internal.Text -> Data.Text.Internal.Text | v == Data.Text.map}","ident":"_","row":45,"col":48},"61":{"ann":"{v : GHC.Types.Int -> GHC.Types.Char | v == GHC.Char.chr}","ident":"GHC.Char.chr","row":45,"col":61},"13":{"ann":"Main.Room","ident":"r","row":45,"col":13},"83":{"ann":"{v : GHC.Types.Char -> GHC.Types.Int | v == GHC.Base.ord}","ident":"_","row":45,"col":83},"113":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}","ident":"_","row":45,"col":113},"56":{"ann":"GHC.Types.Char","ident":"c","row":45,"col":56},"116":{"ann":"{v : GHC.Types.Char -> GHC.Types.Int | v == GHC.Base.ord}","ident":"_","row":45,"col":116},"71":{"ann":"{v : GHC.Types.Char -> GHC.Types.Int | v == GHC.Base.ord}","ident":"_","row":45,"col":71},"70":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792809842","row":45,"col":70},"69":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792809845","row":45,"col":69},"94":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}","ident":"_","row":45,"col":94},"104":{"ann":"x1:GHC.Types.Int -> x2:{v : GHC.Types.Int | v /= 0} -> {v : GHC.Types.Int | v == x1 mod x2\n                                                                            && (0 <= x1\n                                                                                && 0 < x2 => 0 <= v\n                                                                                             && v < x2)}","ident":"_","row":45,"col":104},"5":{"ann":"Main.Room -> Main.Room","ident":"decrypt","row":45,"col":5},"80":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}","ident":"_","row":45,"col":80},"38":{"ann":"{v : Main.Room | v == r}","ident":"lq_anf$##7205759403792809850","row":45,"col":38}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Main.$trModule","row":1,"col":1}},"40":{"1":{"ann":"[Main.Room] -> GHC.Types.Int","ident":"Main.solve1","row":40,"col":1},"18":{"ann":"x1:[Main.Room] -> {v : [GHC.Types.Int] | len v == len x1}","ident":"lq_anf$##7205759403792809835","row":40,"col":18},"33":{"ann":"x1:[Main.Room] -> {v : [Main.Room] | len v <= len x1}","ident":"lq_anf$##7205759403792809836","row":40,"col":33},"10":{"ann":"[GHC.Types.Int] -> GHC.Types.Int","ident":"lq_anf$##7205759403792809834","row":40,"col":10}},"26":{"36":{"ann":"{v : GHC.Types.Int -> Data.Text.Internal.Text -> Data.Text.Internal.Text | v == Data.Text.dropEnd}","ident":"_","row":26,"col":36},"50":{"ann":"Data.Text.Internal.Text","ident":"lq_anf$##7205759403792809777","row":26,"col":50},"20":{"ann":"{v : Data.Text.Internal.Text -> Data.Text.Internal.Text -> [Data.Text.Internal.Text] | v == Data.Text.splitOn}","ident":"_","row":26,"col":20}},"34":{"78":{"ann":"x1:a -> x2:{VV : a | VV /= 0} -> {VV : a | VV == x1 / x2}","ident":"_","row":34,"col":78},"31":{"ann":"[GHC.Types.Char] -> [GHC.Types.Char]","ident":"lq_anf$##7205759403792809805","row":34,"col":31},"22":{"ann":"{v : [GHC.Types.Char] -> Data.Text.Internal.Text | v == Data.Text.pack}","ident":"Data.Text.pack","row":34,"col":22},"12":{"ann":"(Data.Map.Internal.Map GHC.Types.Char a)","ident":"counter","row":34,"col":12},"89":{"ann":"[(GHC.Types.Char, a)]","ident":"lq_anf$##7205759403792809814","row":34,"col":89},"1":{"ann":"(GHC.Real.Fractional a, GHC.Classes.Ord a) =>\n(Data.Map.Internal.Map GHC.Types.Char a) -> Data.Text.Internal.Text","ident":"Main.mkChecksum","row":34,"col":1},"64":{"ann":"(GHC.Types.Char, a)","ident":"lq_anf$##7205759403792809808","row":34,"col":64},"42":{"ann":"x1:[(GHC.Types.Char, a)] -> {v : [GHC.Types.Char] | len v == len x1}","ident":"lq_anf$##7205759403792809807","row":34,"col":42},"54":{"ann":"((GHC.Types.Char, a) -> (a, GHC.Types.Char)) -> [(GHC.Types.Char, a)] -> [(GHC.Types.Char, a)]","ident":"_","row":34,"col":54},"76":{"ann":"a","ident":"lq_anf$##7205759403792809811","row":34,"col":76}},"27":{"25":{"ann":"Data.Text.Internal.Text","ident":"lq_anf$##7205759403792809787","row":27,"col":25},"36":{"ann":"{v : [Data.Text.Internal.Text] | len v == len chunks - 1}","ident":"lq_anf$##7205759403792809786","row":27,"col":36},"66":{"ann":"{v : Data.Text.Internal.Text -> [GHC.Types.Char] | v == Data.Text.Show.unpack}","ident":"_","row":27,"col":66},"60":{"ann":"[GHC.Types.Char] -> GHC.Types.Int","ident":"_","row":27,"col":60}},"24":{"12":{"ann":"Data.Text.Internal.Text","ident":"line","row":24,"col":12},"5":{"ann":"Data.Text.Internal.Text -> Main.Room","ident":"mkRoom","row":24,"col":5}}},"errors":[{"start":{"line":26,"column":50},"stop":{"line":26,"column":61},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [Text] | len v >= 0\n                       && v == chunks}\n \n  not a subtype of Required type\n    VV : {VV : [Text] | len VV > 0}\n \n  In Context\n    chunks : {chunks : [Text] | len chunks >= 0}"},{"start":{"line":27,"column":36},"stop":{"line":27,"column":49},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : [Text] | len v >= 0\n                       && v == chunks}\n \n  not a subtype of Required type\n    VV : {VV : [Text] | len VV > 0}\n \n  In Context\n    chunks : {chunks : [Text] | len chunks >= 0}"},{"start":{"line":34,"column":76},"stop":{"line":34,"column":81},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {VV : a | VV == v}\n \n  not a subtype of Required type\n    VV : {VV : a | VV /= 0}\n \n  In Context\n    v : a"},{"start":{"line":25,"column":7},"stop":{"line":27,"column":93},"message":"Error: Totality Error\nYour function is not total: not all patterns are defined.\nHint: Use \"--no-totality\" to deactivate totality checking."},{"start":{"line":25,"column":7},"stop":{"line":27,"column":93},"message":"Error: Totality Error\nYour function is not total: not all patterns are defined.\nHint: Use \"--no-totality\" to deactivate totality checking."},{"start":{"line":25,"column":7},"stop":{"line":27,"column":93},"message":"Error: Totality Error\nYour function is not total: not all patterns are defined.\nHint: Use \"--no-totality\" to deactivate totality checking."}]}